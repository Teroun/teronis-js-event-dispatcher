// Generated by dts-bundle v0.7.3

type DefaultFunction = (...args: any[]) => void;
type Arguments<F extends Function> = F extends (...args: infer A) => any ? A : never;
export class ArgtiveEvent<T extends DefaultFunction = DefaultFunction> {
    constructor();
    attach(fn: T): void;
    detach(fn: Function): void;
    apply(scope?: null, args?: Arguments<T>): void;
    call(scope?: null, ...args: Arguments<T>): void;
    invoke(...args: Arguments<T>): void;
    length(): number;
}
export {};

